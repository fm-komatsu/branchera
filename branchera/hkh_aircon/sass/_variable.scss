

$pcW: 769px;
$tabW: 768px;
$spW: 768px;


$spMenuYPos1: 5px;
$spMenuYPos2: 12px;
$spMenuYPos3: 19px;


@mixin conIn($w) {
	max-width: $w;
	width: 100%;
	margin: 0 auto;
}


@mixin coverA($hover: false) {
	position: absolute;
	z-index: 1;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	@if $hover == true {
		transition: 0.3s;
		&:hover {
			background: rgba(255, 255, 255, 0.3);
		}
	}
}


@mixin fontSize($size, $base: 16) {
	font-size: $size + px;
	font-size: ($size / $base) + rem;
}


@mixin clearfix() {
	/* For modern browsers */
	&:before,
	&:after {
		content:"";
		display:table;
	}
	&:after {
		clear:both;
	}
	/* For IE 6/7 (trigger hasLayout) */
	& {
		zoom:1;
	}
}

@mixin flex($justify, $align, $wrap: nowrap) {
	display: flex;
	justify-content: $justify;
	align-items: $align;
	display: -webkit-flex;
	flex-wrap: $wrap;
}

@mixin shrink() {
	flex-shrink: 0;
}

@mixin max-h($break-point) {
	@media screen and (max-height: $break-point) {
		@content;
	}
}

@mixin min-h($break-point) {
	@media screen and (min-height: $break-point) {
		@content;
	}
}

@mixin pc() {
	@media screen and (min-width: $pcW) {
		@content;
	}
}

@mixin tab() {
	@media screen and (max-width: $spW) and (min-width: $tabW) {
		@content;
	}
}

@mixin sp() {
	@media screen and (max-width: $spW) {
		@content;
	}
}


@mixin maxW($break-point) {
	@media screen and (max-width: $break-point) {
		@content;
	}
}

@mixin minW($break-point) {
	@media screen and (min-width: $break-point) {
		@content;
	}
}

@mixin maxMinW($break-point-min, $break-point-max) {
	@media screen and (min-width: $break-point-min) and (max-width: $break-point-max) {
		@content;
	}
}

@mixin triangleArrow($direction: right, $size: 12, $color: $gray){
	$set: left;

	@if $direction == left{
		$set: right;
	}@elseif $direction == top{
		$set: bottom;
	}@elseif $direction == bottom{
		$set: top;
	}@else{
		$set: left;
	}
	$size: round($size / 2);

	width: 0;
	height: 0;
	border: $size + px solid transparent;
	border-#{$set}-color: $color;
}

@mixin bgImage($fileName, $repeat: no-repeat, $position: center center, $size: cover) {
	background-image: url($fileName);
	background-repeat: $repeat;
	background-position: $position;
	background-size: $size;
}

@mixin centerPos($direction) {
	position: absolute;
	@if $direction == xy {
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}
	@else if $direction == x {
		left: 50%;
		transform: translateX(-50%);
	}
	@else if $direction == y {
		top: 50%;
		transform: translateY(-50%);
	}
}

